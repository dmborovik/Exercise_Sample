# -*- mode: ruby -*-
# vim: set ft=ruby :
# -*- mode: ruby -*-
# vim: set ft=ruby :

Vagrant.configure("2") do |config|
    config.vm.define "router1" do |r1|
        r1.vm.box='ubuntu/focal64'
        r1.vm.host_name='router1'
        r1.vm.network :private_network, ip: "10.0.10.1", adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "r1-r2"
        r1.vm.network :private_network, ip: "10.0.12.1", adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "r1-r3"
        r1.vm.network :private_network, ip: "192.168.10.1", adapter: 4, netmask: "255.255.255.0", virtualbox__intnet: "net1"
        r1.vm.network :private_network, ip: "192.168.56.2", adapter: 5 
    end

    config.vm.define "router2" do |r2|
        r2.vm.box='ubuntu/focal64'
        r2.vm.host_name='router2'
        r2.vm.network :private_network, ip: "10.0.10.2", adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "r1-r2"
        r2.vm.network :private_network, ip: "10.0.11.2", adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "r2-r3"
        r2.vm.network :private_network, ip: "192.168.20.1", adapter: 4, netmask: "255.255.255.0", virtualbox__intnet: "net2"
        r2.vm.network :private_network, ip: "192.168.56.3", adapter: 5 
    end

    config.vm.define "router3" do |r3|
        r3.vm.box='ubuntu/focal64'
        r3.vm.host_name='router3'
        r3.vm.network :private_network, ip: "10.0.11.1", adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "r2-r3"
        r3.vm.network :private_network, ip: "10.0.12.2", adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "r1-r3"
        r3.vm.network :private_network, ip: "192.168.30.1", adapter: 4, netmask: "255.255.255.0", virtualbox__intnet: "net3"
        r3.vm.network :private_network, ip: "192.168.56.4", adapter: 5 
    end

    # if [:vm_name] == "router3"
    #     box.vm.provision "ansible" do |ansible|
    #      ansible.playbook = "playbook/provision.yml"
    #      ansible.inventory_path = "playbook/hosts"
    #      ansible.host_key_checking = "false"
    #      ansible.limit = "all"
    #     end
    # end
 
end