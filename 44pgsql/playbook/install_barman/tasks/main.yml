---
# tasks file for install_barman

- name: install base tools
  dnf:
    name: 
      - python3-pexpect
      - python3-psycopg2
      - bash-completion
      - wget
    state: present
    update_cache: true

- name: disable firewalld service
  service: 
    name: firewalld
    state: stopped
    enabled: false
  when: ( ansible_hostname == "barman" )

- name: Disable Selinux
  selinux:
    state: disabled
  register: selinux
  when: ( ansible_hostname == "barman" )

- name: Ensure SELinux is set to disable mode 
  lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: SELINUX=disabled
  when: ( ansible_hostname == "barman" )

- name: Reboot for apply selinux
  reboot:
    reboot_timeout: 3600
  when: selinux is changed

- name: add gpg key
  rpm_key:
    state: present
    key: https://download.postgresql.org/pub/repos/yum/RPM-GPG-KEY-PGDG
  when: ( ansible_hostname == "barman" )

- name: install repo 
  dnf: 
    name: 'https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm'
    state: present
  when: ( ansible_hostname == "barman" )

- name: disable old postgres module
  shell: dnf -qy module disable postgresql
  when: ( ansible_hostname == "barman" )

- name: install epel-release
  dnf:
    name: 
      - epel-release
    state: present
    update_cache: true

- name: install barman and postresql packages on barman
  dnf:
    name:
      - barman
      - barman-cli
      - postgresql14
    state: present
    update_cache: true
  when: ( ansible_hostname == "barman" )

- name: install barman-cli and postgresql packages on nodes
  dnf: 
    name: 
      - barman-cli
    state: present
    update_cache: true
  when: ( ansible_hostname != "barman" )

- name: generate SSH key for postgres
  user:
    name: postgres
    generate_ssh_key: yes
    ssh_key_type: rsa
    ssh_key_bits: 4096
    force: no
  when: ( ansible_hostname == "node1")

- name: generate SSH key for barman
  user:
    name: barman
    uid: 993
    shell: /bin/bash
    generate_ssh_key: true
    ssh_key_type: rsa
    ssh_key_bits: 4096
    force: no
  when: (ansible_hostname == "barman")

- name: fetch all public ssh keys node1
  shell: cat /var/lib/pgsql/.ssh/id_rsa.pub
  register: ssh_keys
  when: (ansible_hostname == "node1")

- name: transfer public key to barman
  delegate_to: barman
  authorized_key:
    key: "{{ ssh_keys.stdout }}"
    comment: "{{ ansible_hostname }}"
    user: barman
  when: (ansible_hostname == "node1")

- name: fetch all public ssh keys barman
  shell: cat /var/lib/barman/.ssh/id_rsa.pub
  register: ssh_keys
  when: (ansible_hostname == "barman")

- name: transfer public key to barman 
  delegate_to: node1
  authorized_key: 
    key: "{{ ssh_keys.stdout }}"
    comment: "{{ ansible_hostname }}"
    user: postgres
  when: (ansible_hostname == "barman")

- name: Create barman user
  become_user: postgres
  postgresql_user: 
    name: barman
    password: "{{ barman_user_password }}"
    role_attr_flags: SUPERUSER
  ignore_errors: true
  when: (ansible_hostname == "node1")

- name: add permission for barman
  lineinfile:
    path: /var/lib/pgsql/14/data/pg_hba.conf
    line: 'host all {{barman_user}} {{barman_ip}}/32 md5'
  when: (ansible_hostname == "node1") or (ansible_hostname == "node2")

- name: add permision for barman
  lineinfile:
    path: /var/lib/pgsql/14/data/pg_hba.conf
    line: 'host replication {{barman_user}} {{barman_ip}}/32  md5'
  when: (ansible_hostname == "node1") or (ansible_hostname == "node2")

- name: restart postgresql-server on node1
  service:
    name: postgresql-14
    state: restarted
  when: (ansible_hostname == "node1")

- name: create DB for backup
  become_user: postgres
  postgresql_db:
    name: test_db
    encoding: UTF-8
    template: template0
    state: present
  when: (ansible_hostname == "node1")

- name: Add tables to test_db
  become_user: postgres
  postgresql_table:
    db: test_db
    name: test1
    state: present
  when: (ansible_hostname == "node1")

- name: copy .pgpass
  template:
    src: .pgpass.j2
    dest: /var/lib/barman/.pgpass
    owner: barman
    group: barman
    mode: '0600'
  when: (ansible_hostname == "barman")

- name: copy barman.conf
  template:
    src: barman.conf.j2
    dest: /etc/barman.conf
    owner: barman
    group: barman
    mode: '0755'
  when: (ansible_hostname == "barman")

- name: make directory /etc/barman.d/
  file:
    name: /etc/barman.d
    state: directory
    mode: '0755'

- name: copy node1.conf
  template:
    src: node1.conf.j2
    dest: /etc/barman.d/node1.conf
    owner: barman
    group: barman
    mode: '0755'
  when: (ansible_hostname == "barman")

- name: barman switch-wal node1
  become_user: barman
  shell: barman switch-wal node1
  when: (ansible_hostname == "barman")

- name: barman cron
  become_user: barman
  shell: barman cron
  when: (ansible_hostname == "barman")